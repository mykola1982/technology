{"version":3,"file":"static/js/740.99a196f1.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/AddForm/AddForm.jsx","data/materials.js","components/Filter/Filter.jsx","components/ProductItem/ProductItem.jsx","../node_modules/@mui/material/List/ListContext.js","../node_modules/@mui/material/List/listClasses.js","../node_modules/@mui/material/List/List.js","components/ProductsList/ProductsList.jsx","components/ProductDetails/ProductDetails.jsx","fakeAPI.js","pages/Products/Products.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\n\r\nimport { MATERIALS } from \"../../data/materials\";\r\nimport { VALUES_THICKNESS } from \"../../data/materials\";\r\n\r\nconst Department = {\r\n  CNC: \"Дільниця з ЧПУ\",\r\n  PRESSING: \"Штамповочна дільниця\",\r\n};\r\n\r\nconst materials = MATERIALS;\r\nconst valuesThikness = VALUES_THICKNESS;\r\n\r\nexport const AddForm = ({ onSubmit }) => {\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n  const quantityInputId = nanoid();\r\n\r\n  // стейт що контролює вибір виробничої дільниці цеху\r\n  //   const [department, setDepartment] = useState(\"\");\r\n\r\n  // стейт що контролює кнопку сабміту форми через чекбокс\r\n  const [agreed, setAgreed] = useState(false);\r\n\r\n  const handleChangeChecked = (evt) => {\r\n    setAgreed(evt.target.checked);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const quantity = form.elements.quantity.value;\r\n    const department = form.elements.department.value;\r\n    const thickness = form.elements.thickness.value;\r\n    const material = form.elements.material.value;\r\n\r\n    onSubmit({ name, number, quantity, department, thickness, material });\r\n\r\n    //   почитати про форм дата FormData\r\n\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: \" inline-grid\" }} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Найменування</label>\r\n      <input type=\"text\" name=\"name\" id={nameInputId} />\r\n      <label htmlFor={numberInputId}>Децимальний номер</label>\r\n      <input type=\"text\" name=\"number\" id={numberInputId} />\r\n      <label htmlFor={quantityInputId}>Кількість деталей з листа</label>\r\n      <input type=\"number\" name=\"quantity\" id={quantityInputId} />\r\n\r\n      <p>Виберіть виробничу дільницю</p>\r\n      <label>\r\n        ЧПУ\r\n        <input\r\n          type=\"radio\"\r\n          checked\r\n          name=\"department\"\r\n          value={Department.CNC}\r\n          //   onChange={ }\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Штамповка\r\n        <input\r\n          type=\"radio\"\r\n          //   checked={department === Department.PRESSING}\r\n          name=\"department\"\r\n          value={Department.PRESSING}\r\n          //   onChange={}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Товщина матеріалу:\r\n        <select name=\"thickness\">\r\n          {valuesThikness.map((value) => (\r\n            <option key={nanoid()} value={value}>\r\n              {value} мм.\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <label>\r\n        Розмір листа матеріалу:\r\n        <select name=\"material\">\r\n          {materials.map((material) => (\r\n            <option key={nanoid()} value={material}>\r\n              {material}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      {/* {розглянути можливість формування опцій з файлу даних} */}\r\n\r\n      <label>\r\n        Всі дані введені вірно\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={agreed}\r\n          onChange={handleChangeChecked}\r\n        />\r\n      </label>\r\n      {/* групування полів */}\r\n      <button type=\"submit\" disabled={!agreed}>\r\n        Додати деталь до списку\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","export const MATERIALS = [\r\n  \"2500x1250 Оц.\",\r\n  \"2500x1250 Ст3.\",\r\n  \"2500x1250 AISI 304\",\r\n  \"2500x1250 AISI 430\",\r\n  \"2000x1000 Оц.\",\r\n  \"2000x1000 Ст3.\",\r\n  \"2000x1000 AISI 304\",\r\n  \"2000x1000 AISI 430\",\r\n  \"щось\",\r\n];\r\n\r\nexport const VALUES_THICKNESS = [\r\n  \"0.8\",\r\n  \"1.0\",\r\n  \"1.2\",\r\n  \"1.5\",\r\n  \"1.8\",\r\n  \"2.0\",\r\n  \"2.5\",\r\n  \"3.0\",\r\n];\r\n","export const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n","export const ProductItem = ({ id, name, number, onSelectProduct }) => {\r\n  return (\r\n    <li\r\n      onClick={() => {\r\n        onSelectProduct(id);\r\n      }}\r\n      onFocus={() => console.log(id)}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <p>\r\n        {name} - {number}\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst ListContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\nexport default ListContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListUtilityClass(slot) {\n  return generateUtilityClass('MuiList', slot);\n}\nconst listClasses = generateUtilityClasses('MuiList', ['root', 'padding', 'dense', 'subheader']);\nexport default listClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from './ListContext';\nimport { getListUtilityClass } from './listClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePadding,\n    dense,\n    subheader\n  } = ownerState;\n  const slots = {\n    root: ['root', !disablePadding && 'padding', dense && 'dense', subheader && 'subheader']\n  };\n  return composeClasses(slots, getListUtilityClass, classes);\n};\nconst ListRoot = styled('ul', {\n  name: 'MuiList',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];\n  }\n})(({\n  ownerState\n}) => _extends({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  position: 'relative'\n}, !ownerState.disablePadding && {\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.subheader && {\n  paddingTop: 0\n}));\nconst List = /*#__PURE__*/React.forwardRef(function List(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiList'\n  });\n  const {\n      children,\n      className,\n      component = 'ul',\n      dense = false,\n      disablePadding = false,\n      subheader\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  const ownerState = _extends({}, props, {\n    component,\n    dense,\n    disablePadding\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsxs(ListRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      children: [subheader, children]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, vertical padding is removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default List;","import { ProductItem } from \"../ProductItem\";\r\n\r\nimport List from \"@mui/material/List\";\r\n\r\nexport const ProductsList = ({ products, onSelectProduct }) => {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        position: \"relative\",\r\n        overflow: \"auto\",\r\n        maxHeight: 300,\r\n        \"& ul\": { padding: 0 },\r\n      }}\r\n    >\r\n      <li>\r\n        {products.map(({ id, name, number }) => {\r\n          return (\r\n            <ProductItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onSelectProduct={onSelectProduct}\r\n            />\r\n          );\r\n        })}\r\n      </li>\r\n    </List>\r\n  );\r\n};\r\n","export const ProductDetails = ({ product }) => {\r\n  const { name, number, quantity, department, thickness, material } = product;\r\n  return (\r\n    <div>\r\n      Тут буде дельний опис про деталь\r\n      <h2>\r\n        Опис деталі - {name} {number}\r\n      </h2>\r\n      <p>Найменування - {name}</p>\r\n      <p>Децимальний номер - {number}</p>\r\n      <p>Дільниця виготовлення -{department}</p>\r\n      <p>Матеріал -{material} </p>\r\n      {/* написати фунцію для прорахунку норм  */}\r\n      <p>Норма витрати</p>\r\n      <p>Товщина металу-{thickness} мм.</p>\r\n      <p>Кількість деталей листа-{quantity} шт.</p>\r\n    </div>\r\n  );\r\n};\r\n","const products = [\r\n  { id: \"1\", name: \"Підсилювач\", number: \"600.000.054.50-01\", quantity: 160 },\r\n  { id: \"2\", name: \"Кронштейн\", number: \"600.000.054.51\", quantity: 154 },\r\n  { id: \"3\", name: \"Кронштейн термостата\", number: \"600.000.054.52\" },\r\n  { id: \"4\", name: \"Фіксатор торсіона\", number: \"600.000.054.53\" },\r\n  { id: \"5\", name: \"Кронштейн\", number: \"600.000.054.54\" },\r\n  { id: \"6\", name: \"Кутник\", number: \"600.000.054.55\" },\r\n  { id: \"7\", name: \"Направляюча платформи\", number: \"600.000.054.56\" },\r\n  { id: \"8\", name: \"Направляюча платформи\", number: \"600.000.054.56-01\" },\r\n  { id: \"9\", name: \"Направляюча платформи\", number: \"600.000.054.56-02\" },\r\n  { id: \"10\", name: \"Направляюча платформи\", number: \"600.000.054.56-03\" },\r\n  { id: \"11\", name: \"Пластина агрегата\", number: \"600.000.054.60\" },\r\n  { id: \"12\", name: \"Облицювання нижнє\", number: \"300.000.054.61\" },\r\n  { id: \"13\", name: \"Основа лайт-бокса\", number: \"321.000.054.62\" },\r\n  { id: \"14\", name: \"Підсилювач верхнбої вставки\", number: \"600.000.054.63\" },\r\n  { id: \"15\", name: \"Заглушка\", number: \"000.000.054.64\" },\r\n  { id: \"16\", name: \"Облицювання\", number: \"600.000.054.65\" },\r\n  { id: \"17\", name: \"Підсилювач\", number: \"600.000.054.66\" },\r\n  { id: \"18\", name: \"Підсилювач\", number: \"600.000.054.67\" },\r\n  { id: \"19\", name: \"Стійка полиці\", number: \"600.000.054.58\" },\r\n  { id: \"20\", name: \"Кронштейн полиці\", number: \"600.000.054.59\" },\r\n];\r\n\r\nexport const getProducts = () => {\r\n  return products;\r\n};\r\n\r\nexport const getProductById = (productId) => {\r\n  return products.find((product) => product.id === productId);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport { AddForm } from \"../../components/AddForm\";\r\nimport { Filter } from \"../../components/Filter\";\r\nimport { ProductsList } from \"../../components/ProductsList\";\r\nimport { ProductDetails } from \"../../components/ProductDetails/ProductDetails\";\r\nimport { getProducts } from \"../../fakeAPI\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState(getProducts());\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [selectedProduct, setSelectedProduct] = useState({\r\n    id: \"1\",\r\n    name: \"Підсилювач\",\r\n    number: \"600.000.054.50-01\",\r\n    quantity: 160,\r\n  });\r\n\r\n  // useEffect(() => {}, [products]);\r\n\r\n  const selectProduct = (idProduct) => {\r\n    console.log(\"це вибрав в productpage\", idProduct);\r\n    setSelectedProduct(products.find((product) => product.id === idProduct));\r\n\r\n    // дописати логігу вибраного продукту\r\n  };\r\n\r\n  const addProduct = ({\r\n    name,\r\n    number,\r\n    quantity,\r\n    department,\r\n    thickness,\r\n    material,\r\n  }) => {\r\n    const newProduct = {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n      quantity: quantity,\r\n      department: department,\r\n      thickness: thickness,\r\n      material: material,\r\n    };\r\n\r\n    setProducts((prevProducts) => [newProduct, ...prevProducts]);\r\n  };\r\n\r\n  const handleChangeFilter = (evt) => {\r\n    const { value } = evt.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getVisibelProducts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return products.filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(normalizedFilter) ||\r\n        product.number.startsWith(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleProducts = getVisibelProducts();\r\n\r\n  return (\r\n    <>\r\n      <AddForm onSubmit={addProduct} />\r\n      <p>тут буде лист з продукцією</p>\r\n      <Filter value={filter} onChange={handleChangeFilter} />\r\n      <ProductsList\r\n        products={visibleProducts}\r\n        onSelectProduct={selectProduct}\r\n      />\r\n      <ProductDetails product={selectedProduct} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Department","materials","valuesThikness","AddForm","onSubmit","nameInputId","numberInputId","quantityInputId","useState","agreed","setAgreed","style","display","evt","preventDefault","form","currentTarget","name","elements","value","number","quantity","department","thickness","material","reset","htmlFor","type","checked","map","onChange","target","disabled","Filter","ProductItem","onSelectProduct","onClick","onFocus","console","log","cursor","React","getListUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListRoot","styled","overridesResolver","props","styles","ownerState","root","disablePadding","padding","dense","subheader","_extends","listStyle","margin","position","paddingTop","paddingBottom","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","context","classes","slots","composeClasses","useUtilityClasses","_jsx","ListContext","_jsxs","as","clsx","ProductsList","products","sx","width","maxWidth","bgcolor","overflow","maxHeight","ProductDetails","product","getProducts","setProducts","filter","setFilter","selectedProduct","setSelectedProduct","visibleProducts","normalizedFilter","toLowerCase","includes","startsWith","getVisibelProducts","newProduct","prevProducts","idProduct","find"],"sourceRoot":""}