{"version":3,"file":"static/js/455.6452b4db.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/AddForm/AddForm.jsx","components/Filter/Filter.jsx","components/ProductItem/ProductItem.jsx","components/ProductsList/ProductsList.jsx","components/ProductDetails/ProductDetails.jsx","fakeAPI.js","pages/Products/Products.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\n\r\nconst Department = {\r\n  CNC: \"Дільниця з ЧПУ\",\r\n  PRESSING: \"Штамповочна дільниця\",\r\n};\r\n\r\nexport const AddForm = ({ onSubmit }) => {\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n  const quantityInputId = nanoid();\r\n\r\n  // стейт що контролює вибір виробничої дільниці цеху\r\n  //   const [department, setDepartment] = useState(\"\");\r\n\r\n  // стейт що контролює кнопку сабміту форми через чекбокс\r\n  const [agreed, setAgreed] = useState(false);\r\n\r\n  const handleChangeChecked = (evt) => {\r\n    setAgreed(evt.target.checked);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const quantity = form.elements.quantity.value;\r\n    const department = form.elements.department.value;\r\n\r\n    onSubmit({ name, number, quantity });\r\n\r\n    //   почитати про форм дата FormData\r\n\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: \" inline-grid\" }} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Найменування</label>\r\n      <input type=\"text\" name=\"name\" id={nameInputId} />\r\n      <label htmlFor={numberInputId}>Децимальний номер</label>\r\n      <input type=\"text\" name=\"number\" id={numberInputId} />\r\n      <label htmlFor={quantityInputId}>Кількість деталей з листа</label>\r\n      <input type=\"number\" name=\"quantity\" id={quantityInputId} />\r\n\r\n      <p>Виберіть виробничу дільницю</p>\r\n      <label>\r\n        ЧПУ\r\n        <input\r\n          type=\"radio\"\r\n          //   checked={department === Department.CNC}\r\n          name=\"department\"\r\n          value={Department.CNC}\r\n          //   onChange={ }\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Штамповка\r\n        <input\r\n          type=\"radio\"\r\n          //   checked={department === Department.PRESSING}\r\n          name=\"department\"\r\n          value={Department.PRESSING}\r\n          //   onChange={}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Всі дані введені вірно\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={agreed}\r\n          onChange={handleChangeChecked}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" disabled={!agreed}>\r\n        Додати деталь до списку\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","export const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n","export const ProductItem = ({ id, name, number, onSelectProduct }) => {\r\n  return (\r\n    <li onClick={() => onSelectProduct(id)}>\r\n      <p>\r\n        {name} - {number}\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n","import { ProductItem } from \"../ProductItem\";\r\n\r\nexport const ProductsList = ({ products, onSelectProduct }) => {\r\n  return (\r\n    <ul>\r\n      {products.map(({ id, name, number }) => {\r\n        return (\r\n          <ProductItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onSelectProduct={onSelectProduct}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","export const ProductDetails = ({ product }) => {\r\n  const { name, number, quantity, department } = product;\r\n  return (\r\n    <div>\r\n      Тут буде дельний опис про деталь\r\n      <h2>\r\n        Опис деталі - {name} {number}\r\n      </h2>\r\n      <p>Найменування - {name}</p>\r\n      <p>Децимальний номер - {number}</p>\r\n      <p>Дільниця виготовлення -{department}</p>\r\n      <p>Матеріал</p>\r\n      <p>Норма витрати</p>\r\n      <p>Товщина металу</p>\r\n      <p>Кількість деталей листа-{quantity}</p>\r\n    </div>\r\n  );\r\n};\r\n","const products = [\r\n  { id: \"1\", name: \"Підсилювач\", number: \"600.000.054.50-01\", quantity: 160 },\r\n  { id: \"2\", name: \"Кронштейн\", number: \"600.000.054.51\", quantity: 154 },\r\n  { id: \"3\", name: \"Кронштейн термостата\", number: \"600.000.054.52\" },\r\n  { id: \"4\", name: \"Фіксатор торсіона\", number: \"600.000.054.53\" },\r\n  { id: \"5\", name: \"Кронштейн\", number: \"600.000.054.54\" },\r\n  { id: \"6\", name: \"Кутник\", number: \"600.000.054.55\" },\r\n  { id: \"7\", name: \"Направляюча платформи\", number: \"600.000.054.56\" },\r\n  { id: \"8\", name: \"Направляюча платформи\", number: \"600.000.054.56-01\" },\r\n  { id: \"9\", name: \"Направляюча платформи\", number: \"600.000.054.56-02\" },\r\n  { id: \"10\", name: \"Направляюча платформи\", number: \"600.000.054.56-03\" },\r\n  { id: \"11\", name: \"Пластина агрегата\", number: \"600.000.054.60\" },\r\n  { id: \"12\", name: \"Облицювання нижнє\", number: \"300.000.054.61\" },\r\n  { id: \"13\", name: \"Основа лайт-бокса\", number: \"321.000.054.62\" },\r\n  { id: \"14\", name: \"Підсилювач верхнбої вставки\", number: \"600.000.054.63\" },\r\n  { id: \"15\", name: \"Заглушка\", number: \"000.000.054.64\" },\r\n  { id: \"16\", name: \"Облицювання\", number: \"600.000.054.65\" },\r\n  { id: \"17\", name: \"Підсилювач\", number: \"600.000.054.66\" },\r\n  { id: \"18\", name: \"Підсилювач\", number: \"600.000.054.67\" },\r\n  { id: \"19\", name: \"Стійка полиці\", number: \"600.000.054.58\" },\r\n  { id: \"20\", name: \"Кронштейн полиці\", number: \"600.000.054.59\" },\r\n];\r\n\r\nexport const getProducts = () => {\r\n  return products;\r\n};\r\n\r\nexport const getProductById = (productId) => {\r\n  return products.find((product) => product.id === productId);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport { AddForm } from \"../../components/AddForm\";\r\nimport { Filter } from \"../../components/Filter\";\r\nimport { ProductsList } from \"../../components/ProductsList\";\r\nimport { ProductDetails } from \"../../components/ProductDetails/ProductDetails\";\r\nimport { getProducts } from \"../../fakeAPI\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState(getProducts());\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [selectedProduct, setSelectedProduct] = useState({\r\n    id: \"1\",\r\n    name: \"Підсилювач\",\r\n    number: \"600.000.054.50-01\",\r\n    quantity: 160,\r\n  });\r\n\r\n  // useEffect(() => {}, [products]);\r\n\r\n  const selectProduct = (idProduct) => {\r\n    console.log(\"це вибрав в productpage\", idProduct);\r\n    setSelectedProduct(products.find((product) => product.id === idProduct));\r\n\r\n    // дописати логігу вибраного продукту\r\n  };\r\n\r\n  const addProduct = ({ name, number, quantity }) => {\r\n    const newProduct = {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n      quantity: quantity,\r\n    };\r\n\r\n    setProducts((prevProducts) => [newProduct, ...prevProducts]);\r\n  };\r\n\r\n  const handleChangeFilter = (evt) => {\r\n    const { value } = evt.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getVisibelProducts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return products.filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(normalizedFilter) ||\r\n        product.number.startsWith(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleProducts = getVisibelProducts();\r\n\r\n  return (\r\n    <>\r\n      <AddForm onSubmit={addProduct} />\r\n      <p>тут буде лист з продукцією</p>\r\n      <Filter value={filter} onChange={handleChangeFilter} />\r\n      <ProductsList\r\n        products={visibleProducts}\r\n        onSelectProduct={selectProduct}\r\n      />\r\n      <ProductDetails product={selectedProduct} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Department","AddForm","onSubmit","nameInputId","numberInputId","quantityInputId","useState","agreed","setAgreed","style","display","evt","preventDefault","form","currentTarget","name","elements","value","number","quantity","department","reset","htmlFor","type","checked","onChange","target","disabled","Filter","ProductItem","onSelectProduct","onClick","ProductsList","products","map","ProductDetails","product","getProducts","setProducts","filter","setFilter","selectedProduct","setSelectedProduct","visibleProducts","normalizedFilter","toLowerCase","includes","startsWith","getVisibelProducts","newProduct","prevProducts","idProduct","console","log","find"],"sourceRoot":""}