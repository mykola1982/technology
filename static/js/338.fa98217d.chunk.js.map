{"version":3,"file":"static/js/338.fa98217d.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/AddForm/AddForm.jsx","components/Filter/Filter.jsx","components/ProductItem/ProductItem.jsx","components/ProductsList/ProductsList.jsx","fakeAPI.js","pages/Products/Products.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\n// const Department = {\r\n//   CNC: \"Дільниця з ЧПУ\",\r\n//   PRESSING: \"Штамповочна дільниця\",\r\n// };\r\n\r\nexport const AddForm = ({ onSubmit }) => {\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n  const quantityInputId = nanoid();\r\n\r\n  // стейт що контролює вибір виробничої дільниці цеху\r\n  //   const [department, setDepartment] = useState(\"\");\r\n\r\n  // стейт що контролює кнопку сабміту форми через чекбокс\r\n  const [agreed, setAgreed] = useState(false);\r\n\r\n  const handleChangeChecked = (evt) => {\r\n    setAgreed(evt.target.checked);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const quantity = form.elements.quantity.value;\r\n    onSubmit({ name, number, quantity });\r\n\r\n    //   почитати про форм дата FormData\r\n\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: \" inline-grid\" }} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Найменування</label>\r\n      <input type=\"text\" name=\"name\" id={nameInputId} />\r\n      <label htmlFor={numberInputId}>Децимальний номер</label>\r\n      <input type=\"text\" name=\"number\" id={numberInputId} />\r\n      <label htmlFor={quantityInputId}>Кількість деталей з листа</label>\r\n      <input type=\"number\" name=\"quantity\" id={quantityInputId} />\r\n\r\n      {/* <label>\r\n        ЧПУ\r\n        <input\r\n          type=\"radio\"\r\n          checked={department === Department.CNC}\r\n          name=\"department\"\r\n          value={Department.CNC}\r\n          //   onChange={ }\r\n        />\r\n      </label>\r\n      <p>Виберіть виробничу дільницю</p>\r\n      <label>\r\n        Штамповка\r\n        <input\r\n          type=\"radio\"\r\n          checked={department === Department.PRESSING}\r\n          name=\"department\"\r\n          value={Department.PRESSING}\r\n          //   onChange={}\r\n        />\r\n      </label> */}\r\n\r\n      <label>\r\n        Всі дані введені вірно\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={agreed}\r\n          onChange={handleChangeChecked}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" disabled={!agreed}>\r\n        Додати деталь до списку\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","export const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport const ProductItem = ({ id, name, number }) => {\r\n  return (\r\n    <li>\r\n      <Link to={`/products/${id}`}>\r\n        <p>\r\n          {name} - {number}\r\n        </p>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n","import { ProductItem } from \"../ProductItem\";\r\n\r\nexport const ProductsList = ({ products }) => {\r\n  return (\r\n    <ul>\r\n      {products.map(({ id, name, number }) => {\r\n        return <ProductItem key={id} id={id} name={name} number={number} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","const products = [\r\n  { id: \"1\", name: \"Підсилювач\", number: \"600.000.054.50-01\", quantity: 160 },\r\n  { id: \"2\", name: \"Кронштейн\", number: \"600.000.054.51\", quantity: 154 },\r\n  { id: \"3\", name: \"Кронштейн термостата\", number: \"600.000.054.52\" },\r\n  { id: \"4\", name: \"Фіксатор торсіона\", number: \"600.000.054.53\" },\r\n  { id: \"5\", name: \"Кронштейн\", number: \"600.000.054.54\" },\r\n  { id: \"6\", name: \"Кутник\", number: \"600.000.054.55\" },\r\n  { id: \"7\", name: \"Направляюча платформи\", number: \"600.000.054.56\" },\r\n  { id: \"8\", name: \"Направляюча платформи\", number: \"600.000.054.56-01\" },\r\n  { id: \"9\", name: \"Направляюча платформи\", number: \"600.000.054.56-02\" },\r\n  { id: \"10\", name: \"Направляюча платформи\", number: \"600.000.054.56-03\" },\r\n  { id: \"11\", name: \"Пластина агрегата\", number: \"600.000.054.60\" },\r\n  { id: \"12\", name: \"Облицювання нижнє\", number: \"300.000.054.61\" },\r\n  { id: \"13\", name: \"Основа лайт-бокса\", number: \"321.000.054.62\" },\r\n  { id: \"14\", name: \"Підсилювач верхнбої вставки\", number: \"600.000.054.63\" },\r\n  { id: \"15\", name: \"Заглушка\", number: \"000.000.054.64\" },\r\n  { id: \"16\", name: \"Облицювання\", number: \"600.000.054.65\" },\r\n  { id: \"17\", name: \"Підсилювач\", number: \"600.000.054.66\" },\r\n  { id: \"18\", name: \"Підсилювач\", number: \"600.000.054.67\" },\r\n  { id: \"19\", name: \"Стійка полиці\", number: \"600.000.054.58\" },\r\n  { id: \"20\", name: \"Кронштейн полиці\", number: \"600.000.054.59\" },\r\n];\r\n\r\nexport const getProducts = () => {\r\n  return products;\r\n};\r\n\r\nexport const getProductById = (productId) => {\r\n  return products.find((product) => product.id === productId);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport { AddForm } from \"../../components/AddForm\";\r\nimport { Filter } from \"../../components/Filter\";\r\nimport { ProductsList } from \"../../components/ProductsList\";\r\nimport { getProducts } from \"../../fakeAPI\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState(getProducts());\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  // useEffect(() => {}, [products]);\r\n\r\n  const addProduct = ({ name, number, quantity }) => {\r\n    const newProduct = {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n      quantity: quantity,\r\n    };\r\n\r\n    setProducts((prevProducts) => [newProduct, ...prevProducts]);\r\n  };\r\n\r\n  const handleChangeFilter = (evt) => {\r\n    const { value } = evt.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getVisibelProducts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return products.filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(normalizedFilter) ||\r\n        product.number.startsWith(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleProducts = getVisibelProducts();\r\n\r\n  return (\r\n    <>\r\n      <AddForm onSubmit={addProduct} />\r\n      <p>тут буде лист з продукцією</p>\r\n      <Filter value={filter} onChange={handleChangeFilter} />\r\n      <ProductsList products={visibleProducts} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","AddForm","onSubmit","nameInputId","numberInputId","quantityInputId","useState","agreed","setAgreed","style","display","evt","preventDefault","form","currentTarget","name","elements","value","number","quantity","reset","htmlFor","type","checked","onChange","target","disabled","Filter","ProductItem","to","ProductsList","products","map","getProducts","setProducts","filter","setFilter","visibleProducts","normalizedFilter","toLowerCase","product","includes","startsWith","getVisibelProducts","newProduct","prevProducts"],"sourceRoot":""}